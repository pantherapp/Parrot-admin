{"version":3,"sources":["lib/methods.js","lib/RestProvider.js","lib/AuthProvider.js","components/CommnetListField.js","components/CommentField.js","components/ConditionBooleanField.js","components/AudioPlayerField.js","models/Voice.js","App.js","serviceWorker.js","index.js"],"names":["convertFileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","rawFile","onload","result","onerror","getImageSize","img","document","createElement","width","this","height","src","upload","fieldName","submitedData","id","resourceName","resourcePath","a","Array","isArray","name","ref","firebase","storage","child","put","snapshot","getDownloadURL","downloadURL","uploadedAt","Date","type","indexOf","imageSize","console","error","save","data","previous","firebaseSaveFilter","uploadResults","isNew","timestampFieldNames","map","uploadResult","Object","assign","createdAt","updatedAt","firestore","doc","set","del","uploadFields","length","delete","delMany","ids","previousData","getOne","params","resourceData","collection","get","exists","Error","getList","pagination","values","snapshots","docs","push","filter","item","meetsFilters","keys","key","sort","sortBy","order","field","i","page","perPage","_start","_end","slice","total","getMany","getManyReference","target","getItemID","itemId","CREATE","addUploadFeature","requestHandler","resource","image","formerPictures","p","File","newPictures","all","then","base64Pictures","picture64","title","transformedNewPictures","BaseConfiguration","initialQuerytimeout","RestProvider","firebaseConfig","options","trackedResources","resourcesStatus","resourcesData","resourcesPaths","resourcesUploadFields","apps","initializeApp","auth","setPersistence","Auth","Persistence","SESSION","Methods","index","path","GET_LIST","GET_MANY","GET_MANY_REFERENCE","GET_ONE","DELETE","DELETE_MANY","UPDATE","uploads","currentData","baseConfig","userProfilePath","userAdminProp","localStorageTokenName","handleAuthStateChange","config","user","uid","profile","getIdToken","firebaseToken","localStorage","setItem","signOut","removeItem","firebaseLoaded","onAuthStateChanged","AUTH_LOGOUT","catch","currentUser","reload","AUTH_CHECK","AUTH_GET_PERMISSIONS","log","getIdTokenResult","token","claims","AUTH_LOGIN","username","password","alreadySignedIn","signInWithEmailAndPassword","CommentListField","record","dataProvider","useDataProvider","useState","setTotal","setData","loading","setLoading","setError","useEffect","voice_doc_id","Loading","Table","TableHead","TableRow","TableCell","TableBody","value","created_timestamp","address","controls","voice_url","TextField","no","source","defaultProps","addLabel","CommentField","comments","reports","yes","ConditionBooleanField","report_users","AudioPlayerField","VoiceList","props","List","Datagrid","rowClick","label","VoiceShow","Show","SimpleShowLayout","authConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","Admin","authProvider","AuthProvider","Resource","list","show","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7c451a84.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport sortBy from 'sort-by';\nimport { CREATE } from 'react-admin';\n\nconst convertFileToBase64 = file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.rawFile);\n\n    reader.onload = () => resolve(reader.result);\n    reader.onerror = reject;\n  });\n\nconst addUploadFeature = requestHandler => (type, resource, params) => {\n  if (type === 'UPDATE') {\n    if (params.data.image && params.data.image.length) {\n      const formerPictures = params.data.image.filter(p => !(p.rawFile instanceof File));\n      const newPictures = params.data.image.filter(p => p.rawFile instanceof File);\n\n      return Promise.all(newPictures.map(convertFileToBase64))\n        .then(base64Pictures =>\n          base64Pictures.map(picture64 => ({\n            src: picture64,\n            title: `${params.data.title}`\n          }))\n        )\n        .then(transformedNewPictures =>\n          requestHandler(type, resource, {\n            ...params,\n            data: {\n              ...params.data,\n              image: [...transformedNewPictures, ...formerPictures]\n            }\n          })\n        );\n    }\n  }\n  // for other request types and reources, fall back to the defautl request handler\n  return requestHandler(type, resource, params);\n};\n\nconst getImageSize = file => {\n  return new Promise(resolve => {\n    const img = document.createElement('img');\n    img.onload = function() {\n      resolve({\n        width: this.width,\n        height: this.height\n      });\n    };\n    img.src = file.src;\n  });\n};\n\nconst upload = async (fieldName, submitedData, id, resourceName, resourcePath) => {\n  let file = submitedData[fieldName];\n  if (!file) {\n    return false;\n  }\n  \n  file = Array.isArray(file) ? file[0] : file;\n  \n  const rawFile = file.rawFile;\n\n  const result = {};\n  if (file && rawFile && rawFile.name) {\n    const ref = firebase\n      .storage()\n      .ref()\n      .child(`${resourcePath}/${id}/${fieldName}`);\n    const snapshot = await ref.put(rawFile);\n    const downloadURL = await snapshot.ref.getDownloadURL();\n    result[fieldName] = [{}];\n    result[fieldName][0].uploadedAt = new Date();\n    result[fieldName][0].src = downloadURL;\n    result[fieldName][0].type = rawFile.type;\n    result[fieldName][0].name = rawFile.name;\n    if (rawFile.type.indexOf('image/') === 0) {\n      try {\n        const imageSize = await getImageSize(file);\n        result[fieldName][0].width = imageSize.width;\n        result[fieldName][0].height = imageSize.height;\n      } catch (e) {\n        console.error(`Failed to get image dimensions`);\n      }\n    }\n    return result;\n  }\n  return false;\n};\n\nconst save = async (\n  id,\n  data,\n  previous,\n  resourceName,\n  resourcePath,\n  firebaseSaveFilter,\n  uploadResults,\n  isNew,\n  timestampFieldNames\n) => {\n  if (uploadResults) {\n    uploadResults.map(uploadResult => (uploadResult ? Object.assign(data, uploadResult) : false));\n  }\n\n  if (isNew) {\n    Object.assign(data, { [timestampFieldNames.createdAt]: new Date() });\n  }\n\n  data = Object.assign(previous, { [timestampFieldNames.updatedAt]: new Date() }, data);\n\n  if (!data.id) {\n    data.id = id;\n  }\n\n  await firebase\n    .firestore()\n    .doc(`${resourcePath}/${data.id}`)\n    .set(firebaseSaveFilter(data));\n  return { data };\n};\n\nconst del = async (id, resourceName, resourcePath, uploadFields) => {\n  if (uploadFields.length) {\n    uploadFields.map(fieldName =>\n      firebase\n        .storage()\n        .ref()\n        .child(`${resourcePath}/${id}/${fieldName}`)\n        .delete()\n    );\n  }\n\n  await firebase\n    .firestore()\n    .doc(`${resourcePath}/${id}`)\n    .delete();\n  return { data: id };\n};\n\nconst delMany = async (ids, resourceName, previousData) => {\n  await ids.map(id =>\n    firebase\n      .firestore()\n      .doc(`${resourceName}/${id}`)\n      .delete()\n  );\n  return { data: ids };\n};\n\nconst getItemID = (params, type, resourceName, resourcePath, resourceData) => {\n  let itemId = params.data.id || params.id || params.data.key || params.key;\n  if (!itemId) {\n    itemId = firebase\n      .firestore()\n      .collection(resourcePath)\n      .doc().id;\n  }\n\n  if (!itemId) {\n    throw new Error('ID is required');\n  }\n\n  if (resourceData && resourceData[itemId] && type === CREATE) {\n    throw new Error('ID already in use');\n  }\n\n  return itemId;\n};\n\nconst getOne = async (params, resourceName, resourceData) => {\n  if (params.id) {\n    let result = await firebase\n      .firestore()\n      .collection(resourceName)\n      .doc(params.id)\n      .get();\n\n    if (result.exists) {\n      const data = result.data();\n\n      if (data && data.id == null) {\n        data['id'] = result.id;\n      }\n      return { data: data };\n    } else {\n      throw new Error('Id not found');\n    }\n  } else {\n    throw new Error('Id not found');\n  }\n};\n\n/**\n * params example:\n * pagination: { page: 1, perPage: 5 },\n * sort: { field: 'title', order: 'ASC' },\n * filter: { author_id: 12 }\n */\n\nconst getList = async (params, resourceName, resourceData) => {\n  if (params.pagination) {\n    let values = [];\n    let snapshots = await firebase\n      .firestore()\n      .collection(resourceName)\n      .get();\n\n    for (const snapshot of snapshots.docs) {\n      const data = snapshot.data();\n      if (data && data.id == null) {\n        data['id'] = snapshot.id;\n      }\n      values.push(data);\n    }\n\n    if (params.filter) {\n      values = values.filter(item => {\n        let meetsFilters = true;\n        for (const key of Object.keys(params.filter)) {\n          meetsFilters = item[key] === params.filter[key];\n        }\n        return meetsFilters;\n      });\n    }\n\n    if (params.sort) {\n      values.sort(sortBy(`${params.sort.order === 'ASC' ? '' : '-'}${params.sort.field}`));\n    }\n\n    const keys = values.map(i => i.id);\n    const { page, perPage } = params.pagination;\n    const _start = (page - 1) * perPage;\n    const _end = page * perPage;\n    const data = values ? values.slice(_start, _end) : [];\n    const ids = keys.slice(_start, _end) || [];\n    const total = values ? values.length : 0;\n    return { data, ids, total };\n  } else {\n    throw new Error('Error processing request');\n  }\n};\n\nconst getMany = async (params, resourceName, resourceData) => {\n  let data = [];\n  /* eslint-disable no-await-in-loop */\n  for (const id of params.ids) {\n    let { data: item } = await getOne({ id }, resourceName, resourceData);\n    data.push(item);\n  }\n  return { data };\n};\n\nconst getManyReference = async (params, resourceName, resourceData) => {\n  if (params.target) {\n    if (!params.filter) params.filter = {};\n    params.filter[params.target] = params.id;\n    let { data, total } = await getList(params, resourceName, resourceData);\n    return { data, total };\n  } else {\n    throw new Error('Error processing request');\n  }\n};\n\nexport default {\n  upload,\n  save,\n  del,\n  delMany,\n  getItemID,\n  getOne,\n  getList,\n  getMany,\n  getManyReference,\n  addUploadFeature,\n  convertFileToBase64\n};","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport Methods from './methods';\n\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE, DELETE_MANY } from 'react-admin';\n\n/**\n * @param {string[]|Object[]} trackedResources Array of resource names or array of Objects containing name and\n * optional path properties (path defaults to name)\n * @param {Object} firebaseConfig Options Firebase configuration\n */\n\nconst BaseConfiguration = {\n  initialQuerytimeout: 10000,\n  timestampFieldNames: {\n    createdAt: 'createdAt',\n    updatedAt: 'updatedAt'\n  }\n};\n\nconst RestProvider = (firebaseConfig = {}, options = {}) => {\n  options = Object.assign({}, BaseConfiguration, options);\n  const { timestampFieldNames, trackedResources } = options;\n\n  const resourcesStatus = {};\n  // const resourcesReferences = {};\n  const resourcesData = {};\n  const resourcesPaths = {};\n  const resourcesUploadFields = {};\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\n  }\n\n  /* Functions */\n  const upload = options.upload || Methods.upload;\n  const save = options.save || Methods.save;\n  const del = options.del || Methods.del;\n  const getItemID = options.getItemID || Methods.getItemID;\n  const getOne = options.getOne || Methods.getOne;\n  const getMany = options.getMany || Methods.getMany;\n  const getManyReference = options.getManyReference || Methods.getManyReference;\n  const delMany = options.delMany || Methods.delMany;\n  const getList = options.getList || Methods.getList;\n\n  const firebaseSaveFilter = options.firebaseSaveFilter ? options.firebaseSaveFilter : data => data;\n  // const firebaseGetFilter = options.firebaseGetFilter ? options.firebaseGetFilter : data => data;\n\n  // Sanitize Resources\n  trackedResources.map((resource, index) => {\n    if (typeof resource === Array) {\n      resource = {\n        name: resource['name'],\n        path: resource['path'] || resource['name'],\n        uploadFields: resource['uploadFields'] || []\n      };\n      trackedResources[index] = resource;\n    }\n\n    const { name, path, uploadFields } = resource;\n    if (!resource.name) {\n      throw new Error(`name is missing from resource ${resource}`);\n    }\n    resourcesUploadFields[name] = uploadFields || [];\n    resourcesPaths[name] = path || name;\n    resourcesData[name] = {};\n  });\n\n  /**\n   * @param {string} type Request type, e.g GET_LIST\n   * @param {string} resourceName Resource name, e.g. \"posts\"\n   * @param {Object} payload Request parameters. Depends on the request type\n   * @returns {Promise} the Promise for a REST response\n   */\n\n  return async (type, resourceName, params) => {\n    await resourcesStatus[resourceName];\n    let result = null;\n    switch (type) {\n      case GET_LIST:\n        // console.log('GET_LIST');\n        result = await getList(params, resourceName, resourcesData[resourceName]);\n        return result;\n      case GET_MANY:\n        result = await getMany(params, resourceName, resourcesData[resourceName]);\n        // console.log('GET_MANY');\n        return result;\n\n      case GET_MANY_REFERENCE:\n        // console.log('GET_MANY_REFERENCE');\n        result = await getManyReference(params, resourceName, resourcesData[resourceName]);\n        return result;\n\n      case GET_ONE:\n        // console.log('GET_ONE');\n        result = await getOne(params, resourceName, resourcesData[resourceName]);\n        return result;\n\n      case DELETE:\n        // console.log('DELETE');\n        const uploadFields = resourcesUploadFields[resourceName] ? resourcesUploadFields[resourceName] : [];\n        result = await del(params.id, resourceName, resourcesPaths[resourceName], uploadFields);\n        return result;\n\n      case DELETE_MANY:\n        // console.log('DELETE_MANY');\n        result = await delMany(params.ids, resourceName, resourcesData[resourceName]);\n        return result;\n      case UPDATE:\n      case CREATE:\n        // console.log('UPDATE/CREATE');\n        let itemId = getItemID(params, type, resourceName, resourcesPaths[resourceName], resourcesData[resourceName]);\n        const uploads = resourcesUploadFields[resourceName]\n          ? resourcesUploadFields[resourceName].map(field =>\n              upload(field, params.data, itemId, resourceName, resourcesPaths[resourceName])\n            )\n          : [];\n        \n        const currentData = resourcesData[resourceName][itemId] || {};\n        const uploadResults = await Promise.all(uploads);\n        \n        result = await save(\n          itemId,\n          params.data,\n          currentData,\n          resourceName,\n          resourcesPaths[resourceName],\n          firebaseSaveFilter,\n          uploadResults,\n          type === CREATE,\n          timestampFieldNames\n        );\n        return result;\n\n      default:\n        console.error('Undocumented method: ', type);\n        return { data: [] };\n    }\n  };\n};\n\nexport default RestProvider;","/* globals localStorage */\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS } from 'react-admin';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst baseConfig = {\n  userProfilePath: '/users/',\n  userAdminProp: 'isAdmin',\n  localStorageTokenName: 'RAFirebaseClientToken',\n  handleAuthStateChange: async (auth, config) => {\n    if (auth) {\n      const snapshot = await firebase\n        .firestore()\n        .doc(config.userProfilePath + auth.user.uid)\n        .get();\n      const profile = snapshot.data();\n\n      if (profile && profile[config.userAdminProp]) {\n        const firebaseToken = await auth.user.getIdToken();\n        let user = { auth, profile, firebaseToken };\n        localStorage.setItem(config.localStorageTokenName, firebaseToken);\n        return user;\n      } else {\n        firebase.auth().signOut();\n        localStorage.removeItem(config.localStorageTokenName);\n        throw new Error('sign_in_error');\n      }\n    } else {\n      localStorage.removeItem(config.localStorageTokenName);\n      throw new Error('sign_in_error');\n    }\n  }\n};\n\nexport default (config = {}) => {\n  config = { ...baseConfig, ...config };\n\n  const firebaseLoaded = () =>\n    new Promise(resolve => {\n      firebase.auth().onAuthStateChanged(resolve);\n    });\n\n  return async (type, params) => {\n    if (type === AUTH_LOGOUT) {\n      config.handleAuthStateChange(null, config).catch(() => {});\n      return firebase.auth().signOut();\n    }\n\n    if (firebase.auth().currentUser) {\n      await firebase.auth().currentUser.reload();\n    }\n\n    if (type === AUTH_CHECK) {\n      await firebaseLoaded();\n\n      if (!firebase.auth().currentUser) {\n        throw new Error('sign_in_error');\n      }\n\n      return true;\n    }\n\n    if (type === AUTH_GET_PERMISSIONS) {\n      console.log('AUTH_GET_PERMISSIONS');\n      await firebaseLoaded();\n\n      if (!firebase.auth().currentUser) {\n        throw new Error('sign_in_error');\n      }\n\n      const token = await firebase.auth().currentUser.getIdTokenResult();\n      return token.claims;\n    }\n\n    if (type === AUTH_LOGIN) {\n      const { username, password, alreadySignedIn } = params;\n      let auth = firebase.auth().currentUser;\n\n      if (!auth || !alreadySignedIn) {\n        auth = await firebase.auth().signInWithEmailAndPassword(username, password);\n      }\n\n      return config.handleAuthStateChange(auth, config);\n    }\n\n    return false;\n  };\n};","import React, { useState, useEffect } from 'react';\nimport {\n  TextField\n} from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst CommentListField = ({ record }) => {\n\n    const dataProvider = useDataProvider();\n    const [total, setTotal] = useState();\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    const comments = {\n      no: \"No Comment\"\n    }\n    useEffect(() => {\n        dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n            .then(({ data, total }) => {\n                setTotal(total);  \n                setData(data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n  \n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    if (!total) return <TextField record={comments} source=\"no\" />;\n    if (!data) return [];\n  \n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Location</TableCell>\n            <TableCell>Voice</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map(value => {\n            return (\n              <TableRow key={value.created_timestamp}>\n                <TableCell>{value.address}</TableCell>\n                <TableCell><audio controls src={value.voice_url} /></TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    );\n  };\n  \n  CommentListField.defaultProps = {\n    addLabel: true,\n  };\n\n  export default CommentListField;","import React, { useState, useEffect } from 'react';\nimport {\n  TextField\n} from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\n\nconst CommentField = ({ record }) => {\n    const dataProvider = useDataProvider();\n    const [total, setTotal] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n    useEffect(() => {\n        dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n            .then(({ data, total }) => {\n                setTotal(total);                \n                setLoading(false);\n            })\n            .catch(error => {\n                setError(error);\n                setLoading(false);\n            })\n    }, []);\n    \n    var comments = {\n      result: total + \"  Comments\"\n    }\n  \n    if (loading) return <Loading />;\n    if (error) return <Error />;\n    if (!total) return <TextField record={comments} source=\"result\" />;\n  \n    return (\n      <TextField record={comments} source=\"result\" />\n    )\n  };\n\n  export default CommentField;","import React from 'react';\nimport {\n  TextField\n} from 'react-admin';\n\nconst reports = {\n    no: \"No Report\",\n    yes: \"Reported by user\"\n}\n\nconst ConditionBooleanField = ({ record, ...rest }) => {\n    return record.report_users\n        ? <TextField record={reports} source=\"yes\" />\n        : <TextField record={reports} source=\"no\" />;\n}\n\nConditionBooleanField.defaultProps = {\n    addLabel: true,\n};\n\n\nexport default ConditionBooleanField;\n","import React from 'react';\n\nconst AudioPlayerField = ({ record }) => (\n    <audio controls src={record.voice_url} />\n);\n\nAudioPlayerField.defaultProps = {\n    addLabel: true,\n};\n\nexport default AudioPlayerField;","import React from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Show,\n  SimpleShowLayout\n} from 'react-admin';\nimport {CommentField, AudioPlayerField, ConditionBooleanField, CommentListField } from '../components';\n\nexport const VoiceList = props => (\n  <List {...props} >\n    <Datagrid rowClick=\"show\">\n      <TextField label=\"Location\" source=\"address\" />\n      <CommentField label=\"Comments\" source=\"id\" />\n      <AudioPlayerField label=\"Voice\" source=\"voice_url\" />\n      <ConditionBooleanField source=\"report_users\" />\n    </Datagrid>\n  </List>\n);\n\nexport const VoiceShow = props => (\n  <Show {...props}>\n    <SimpleShowLayout>\n        <TextField label=\"Location\" source=\"address\" />\n        <AudioPlayerField label=\"Voice\" source=\"voice_url\" />\n        <CommentListField label=\"Comments\" source=\"id\" />\n        <ConditionBooleanField source=\"report_users\" />\n    </SimpleShowLayout>\n  </Show>\n);\n","import React from 'react';\n\nimport { Admin, Resource } from 'react-admin';\n// import { RestProvider, AuthProvider, base64Uploader } from 'ra-data-firestore-client';\nimport { RestProvider, AuthProvider } from './lib'\n\nimport { VoiceList, VoiceShow } from './models';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBhiU47emMZuyJ9AQbJPesDKo5l6qNL7O8\",\n  authDomain: \"parrot-c87c3.firebaseapp.com\",\n  databaseURL: \"https://parrot-c87c3.firebaseio.com\",\n  projectId: \"parrot-c87c3\",\n  storageBucket: \"parrot-c87c3.appspot.com\",\n  messagingSenderId: \"470642441118\",\n  appId: \"1:470642441118:web:02d787a5530ba65da6348f\"\n};\nconst trackedResources = [{ name: 'voices', path: 'voices' }];\n\nconst authConfig = {\n  userProfilePath: '/users/',\n  userAdminProp: 'isAdmin'\n};\n\n// const dataProvider = base64Uploader(RestProvider(firebaseConfig, { trackedResources }));\nconst dataProvider = RestProvider(firebaseConfig, { trackedResources });\nconst App = () => (\n  <Admin dataProvider={dataProvider} authProvider={AuthProvider(authConfig)}>\n    <Resource name=\"voices\" list={VoiceList} show={VoiceShow} />\n  </Admin>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}