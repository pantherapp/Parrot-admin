{"ast":null,"code":"var _jsxFileName = \"/Users/yrm/Sites/parrot/src/models/Voice.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Datagrid, TextField, DateField, Show, SimpleShowLayout } from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin'; // import { List as MyList } from '@material-ui/core/List';\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst Comment = ({\n  record\n}) => {\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    dataProvider.getList('comments', {\n      pagination: {\n        page: 1,\n        perPage: 100000\n      },\n      sort: {},\n      filter: {\n        voice_doc_id: record.id\n      }\n    }).then(({\n      data,\n      total\n    }) => {\n      setTotal(total);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  });\n  if (!total) return 0;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, total, \" comments\");\n};\n\nconst ConditionBooleanField = ({\n  record,\n  ...rest\n}) => {\n  return record.report_users ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), \"Reported by user\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), \"No Report\");\n};\n\nconst cardStyle = {\n  width: '100%',\n  margin: '0.5em',\n  display: 'flex',\n  verticalAlign: 'center',\n  flexFlow: 'row wrap',\n  justifyContent: 'space-between'\n};\nconst titleStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'block',\n  fontSize: '15px'\n};\n\nconst Player = ({\n  record\n}) => /*#__PURE__*/React.createElement(\"audio\", {\n  controls: true,\n  src: record.voice_url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 3\n  }\n});\n\nconst CommentGrid = ({\n  record\n}) => {\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    dataProvider.getList('comments', {\n      pagination: {\n        page: 1,\n        perPage: 100000\n      },\n      sort: {},\n      filter: {\n        voice_doc_id: record.id\n      }\n    }).then(({\n      data,\n      total\n    }) => {\n      setTotal(total);\n      setData(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  });\n  if (!total) return 0;\n  if (!data) return [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '1em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, data.map(value => {\n    console.log(value.created_timestamp);\n    return /*#__PURE__*/React.createElement(Card, {\n      key: value.created_timestamp,\n      style: cardStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: titleStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, value.address), \" \", /*#__PURE__*/React.createElement(\"audio\", {\n      controls: true,\n      src: value.voice_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 55\n      }\n    })));\n  }));\n};\n\nexport const VoiceList = props => /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Datagrid, {\n  rowClick: \"show\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  label: \"Location\",\n  source: \"address\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Comment, {\n  label: \"Comments\",\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Player, {\n  source: \"voice_url\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ConditionBooleanField, {\n  source: \"report_users\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 7\n  }\n})));\nexport const VoiceShow = props => /*#__PURE__*/React.createElement(Show, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SimpleShowLayout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"address\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(CommentGrid, {\n  label: \"Comments\",\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ConditionBooleanField, {\n  source: \"report_users\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }\n})));","map":{"version":3,"sources":["/Users/yrm/Sites/parrot/src/models/Voice.js"],"names":["React","useState","useEffect","List","Datagrid","TextField","DateField","Show","SimpleShowLayout","useDataProvider","Loading","Error","Card","CardContent","Comment","record","dataProvider","total","setTotal","loading","setLoading","error","setError","getList","pagination","page","perPage","sort","filter","voice_doc_id","id","then","data","catch","ConditionBooleanField","rest","report_users","cardStyle","width","margin","display","verticalAlign","flexFlow","justifyContent","titleStyle","height","fontSize","Player","voice_url","CommentGrid","setData","map","value","console","log","created_timestamp","address","VoiceList","props","VoiceShow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  DateField,\n  Show,\n  SimpleShowLayout\n} from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\n// import { List as MyList } from '@material-ui/core/List';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst Comment = ({ record }) => {\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n      dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n          .then(({ data, total }) => {\n              setTotal(total);                \n              setLoading(false);\n          })\n          .catch(error => {\n              setError(error);\n              setLoading(false);\n          })\n  }, []);\n  \n  if (loading) return <Loading />;\n  if (error) return <Error />;\n  if (!total) return 0;\n\n  return (\n    <span>{total} comments</span>\n  )\n};\n\nconst ConditionBooleanField = ({ record, ...rest }) => {\n    return record.report_users\n        ? <span><br />Reported by user</span>\n        : <span><br />No Report</span>;\n}\n\nconst cardStyle = {\n  width: '100%',\n  margin: '0.5em',\n  display: 'flex',\n  verticalAlign: 'center',\n  flexFlow: 'row wrap',\n  justifyContent: 'space-between'\n};\n\nconst titleStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'block',\n  fontSize: '15px'\n};\n\n\nconst Player = ({ record }) => (\n  <audio controls src={record.voice_url} />\n);\n\nconst CommentGrid = ({ record }) => {\n\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n      dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n          .then(({ data, total }) => {\n              setTotal(total);  \n              setData(data);\n              setLoading(false);\n          })\n          .catch(error => {\n              setError(error);\n              setLoading(false);\n          })\n  }, []);\n\n  if (loading) return <Loading />;\n  if (error) return <Error />;\n  if (!total) return 0;\n  if (!data) return [];\n\n  return (\n    <div style={{ margin: '1em' }}>\n    {data.map(value => {\n      console.log(value.created_timestamp);\n      return (\n        <Card key={value.created_timestamp} style={cardStyle}>\n            <CardContent>\n      <span style={titleStyle}>{value.address}</span> <audio controls src={value.voice_url} />\n            </CardContent>\n        </Card>\n      )\n    })}\n    </div>\n  )\n};\n\nexport const VoiceList = props => (\n  <List {...props} >\n    <Datagrid rowClick=\"show\">\n      <TextField label=\"Location\" source=\"address\" />\n      <Comment label=\"Comments\" source=\"id\" />\n      <Player source=\"voice_url\" />\n      <ConditionBooleanField source=\"report_users\" />\n    </Datagrid>\n  </List>\n);\n\nexport const VoiceShow = props => (\n  <Show {...props}>\n    <SimpleShowLayout>\n        <TextField source=\"address\" />\n        <CommentGrid label=\"Comments\" source=\"id\" />\n        <ConditionBooleanField source=\"report_users\" />\n    </SimpleShowLayout>\n  </Show>\n);\n"]},"metadata":{},"sourceType":"module"}