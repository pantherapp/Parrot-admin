{"ast":null,"code":"(function (root, factory) {\n  'use strict';\n  /*istanbul ignore next:cant test*/\n\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else {\n    // Browser globals\n    root.objectPath = factory();\n  }\n})(this, function () {\n  'use strict';\n\n  var toStr = Object.prototype.toString,\n      _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  function isEmpty(value) {\n    if (!value) {\n      return true;\n    }\n\n    if (isArray(value) && value.length === 0) {\n      return true;\n    } else {\n      for (var i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function toString(type) {\n    return toStr.call(type);\n  }\n\n  function isNumber(value) {\n    return typeof value === 'number' || toString(value) === \"[object Number]\";\n  }\n\n  function isString(obj) {\n    return typeof obj === 'string' || toString(obj) === \"[object String]\";\n  }\n\n  function isObject(obj) {\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  function isArray(obj) {\n    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj) {\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key) {\n    var intKey = parseInt(key);\n\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n\n    return key;\n  }\n\n  function set(obj, path, value, doNotReplace) {\n    if (isNumber(path)) {\n      path = [path];\n    }\n\n    if (isEmpty(path)) {\n      return obj;\n    }\n\n    if (isString(path)) {\n      return set(obj, path.split('.'), value, doNotReplace);\n    }\n\n    var currentPath = getKey(path[0]);\n\n    if (path.length === 1) {\n      var oldVal = obj[currentPath];\n\n      if (oldVal === void 0 || !doNotReplace) {\n        obj[currentPath] = value;\n      }\n\n      return oldVal;\n    }\n\n    if (obj[currentPath] === void 0) {\n      if (isNumber(currentPath)) {\n        obj[currentPath] = [];\n      } else {\n        obj[currentPath] = {};\n      }\n    }\n\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\n  }\n\n  function del(obj, path) {\n    if (isNumber(path)) {\n      path = [path];\n    }\n\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    if (isEmpty(path)) {\n      return obj;\n    }\n\n    if (isString(path)) {\n      return del(obj, path.split('.'));\n    }\n\n    var currentPath = getKey(path[0]);\n    var oldVal = obj[currentPath];\n\n    if (path.length === 1) {\n      if (oldVal !== void 0) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      }\n    } else {\n      if (obj[currentPath] !== void 0) {\n        return del(obj[currentPath], path.slice(1));\n      }\n    }\n\n    return obj;\n  }\n\n  var objectPath = {};\n\n  objectPath.ensureExists = function (obj, path, value) {\n    return set(obj, path, value, true);\n  };\n\n  objectPath.set = function (obj, path, value, doNotReplace) {\n    return set(obj, path, value, doNotReplace);\n  };\n\n  objectPath.insert = function (obj, path, value, at) {\n    var arr = objectPath.get(obj, path);\n    at = ~~at;\n\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n\n    arr.splice(at, 0, value);\n  };\n\n  objectPath.empty = function (obj, path) {\n    if (isEmpty(path)) {\n      return obj;\n    }\n\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    var value, i;\n\n    if (!(value = objectPath.get(obj, path))) {\n      return obj;\n    }\n\n    if (isString(value)) {\n      return objectPath.set(obj, path, '');\n    } else if (isBoolean(value)) {\n      return objectPath.set(obj, path, false);\n    } else if (isNumber(value)) {\n      return objectPath.set(obj, path, 0);\n    } else if (isArray(value)) {\n      value.length = 0;\n    } else if (isObject(value)) {\n      for (i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          delete value[i];\n        }\n      }\n    } else {\n      return objectPath.set(obj, path, null);\n    }\n  };\n\n  objectPath.push = function (obj, path\n  /*, values */\n  ) {\n    var arr = objectPath.get(obj, path);\n\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n  };\n\n  objectPath.coalesce = function (obj, paths, defaultValue) {\n    var value;\n\n    for (var i = 0, len = paths.length; i < len; i++) {\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n        return value;\n      }\n    }\n\n    return defaultValue;\n  };\n\n  objectPath.get = function (obj, path, defaultValue) {\n    if (isNumber(path)) {\n      path = [path];\n    }\n\n    if (isEmpty(path)) {\n      return obj;\n    }\n\n    if (isEmpty(obj)) {\n      return defaultValue;\n    }\n\n    if (isString(path)) {\n      return objectPath.get(obj, path.split('.'), defaultValue);\n    }\n\n    var currentPath = getKey(path[0]);\n\n    if (path.length === 1) {\n      if (obj[currentPath] === void 0) {\n        return defaultValue;\n      }\n\n      return obj[currentPath];\n    }\n\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n  };\n\n  objectPath.del = function (obj, path) {\n    return del(obj, path);\n  };\n\n  return objectPath;\n});","map":{"version":3,"sources":["/Users/yrm/Sites/parrot/node_modules/object-path/index.js"],"names":["root","factory","module","exports","define","amd","objectPath","toStr","Object","prototype","toString","_hasOwnProperty","hasOwnProperty","isEmpty","value","isArray","length","i","call","type","isNumber","isString","obj","isObject","isBoolean","getKey","key","intKey","parseInt","set","path","doNotReplace","split","currentPath","oldVal","slice","del","splice","ensureExists","insert","at","arr","get","empty","push","apply","Array","arguments","coalesce","paths","defaultValue","len"],"mappings":"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","sourcesContent":["(function (root, factory){\n  'use strict';\n\n  /*istanbul ignore next:cant test*/\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else {\n    // Browser globals\n    root.objectPath = factory();\n  }\n})(this, function(){\n  'use strict';\n\n  var\n    toStr = Object.prototype.toString,\n    _hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  function isEmpty(value){\n    if (!value) {\n      return true;\n    }\n    if (isArray(value) && value.length === 0) {\n      return true;\n    } else {\n      for (var i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  function toString(type){\n    return toStr.call(type);\n  }\n\n  function isNumber(value){\n    return typeof value === 'number' || toString(value) === \"[object Number]\";\n  }\n\n  function isString(obj){\n    return typeof obj === 'string' || toString(obj) === \"[object String]\";\n  }\n\n  function isObject(obj){\n    return typeof obj === 'object' && toString(obj) === \"[object Object]\";\n  }\n\n  function isArray(obj){\n    return typeof obj === 'object' && typeof obj.length === 'number' && toString(obj) === '[object Array]';\n  }\n\n  function isBoolean(obj){\n    return typeof obj === 'boolean' || toString(obj) === '[object Boolean]';\n  }\n\n  function getKey(key){\n    var intKey = parseInt(key);\n    if (intKey.toString() === key) {\n      return intKey;\n    }\n    return key;\n  }\n\n  function set(obj, path, value, doNotReplace){\n    if (isNumber(path)) {\n      path = [path];\n    }\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isString(path)) {\n      return set(obj, path.split('.'), value, doNotReplace);\n    }\n    var currentPath = getKey(path[0]);\n\n    if (path.length === 1) {\n      var oldVal = obj[currentPath];\n      if (oldVal === void 0 || !doNotReplace) {\n        obj[currentPath] = value;\n      }\n      return oldVal;\n    }\n\n    if (obj[currentPath] === void 0) {\n      if (isNumber(currentPath)) {\n        obj[currentPath] = [];\n      } else {\n        obj[currentPath] = {};\n      }\n    }\n\n    return set(obj[currentPath], path.slice(1), value, doNotReplace);\n  }\n\n  function del(obj, path) {\n    if (isNumber(path)) {\n      path = [path];\n    }\n\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if(isString(path)) {\n      return del(obj, path.split('.'));\n    }\n\n    var currentPath = getKey(path[0]);\n    var oldVal = obj[currentPath];\n\n    if(path.length === 1) {\n      if (oldVal !== void 0) {\n        if (isArray(obj)) {\n          obj.splice(currentPath, 1);\n        } else {\n          delete obj[currentPath];\n        }\n      }\n    } else {\n      if (obj[currentPath] !== void 0) {\n        return del(obj[currentPath], path.slice(1));\n      }\n    }\n\n    return obj;\n  }\n\n  var objectPath = {};\n\n  objectPath.ensureExists = function (obj, path, value){\n    return set(obj, path, value, true);\n  };\n\n  objectPath.set = function (obj, path, value, doNotReplace){\n    return set(obj, path, value, doNotReplace);\n  };\n\n  objectPath.insert = function (obj, path, value, at){\n    var arr = objectPath.get(obj, path);\n    at = ~~at;\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n    arr.splice(at, 0, value);\n  };\n\n  objectPath.empty = function(obj, path) {\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isEmpty(obj)) {\n      return void 0;\n    }\n\n    var value, i;\n    if (!(value = objectPath.get(obj, path))) {\n      return obj;\n    }\n\n    if (isString(value)) {\n      return objectPath.set(obj, path, '');\n    } else if (isBoolean(value)) {\n      return objectPath.set(obj, path, false);\n    } else if (isNumber(value)) {\n      return objectPath.set(obj, path, 0);\n    } else if (isArray(value)) {\n      value.length = 0;\n    } else if (isObject(value)) {\n      for (i in value) {\n        if (_hasOwnProperty.call(value, i)) {\n          delete value[i];\n        }\n      }\n    } else {\n      return objectPath.set(obj, path, null);\n    }\n  };\n\n  objectPath.push = function (obj, path /*, values */){\n    var arr = objectPath.get(obj, path);\n    if (!isArray(arr)) {\n      arr = [];\n      objectPath.set(obj, path, arr);\n    }\n\n    arr.push.apply(arr, Array.prototype.slice.call(arguments, 2));\n  };\n\n  objectPath.coalesce = function (obj, paths, defaultValue) {\n    var value;\n\n    for (var i = 0, len = paths.length; i < len; i++) {\n      if ((value = objectPath.get(obj, paths[i])) !== void 0) {\n        return value;\n      }\n    }\n\n    return defaultValue;\n  };\n\n  objectPath.get = function (obj, path, defaultValue){\n    if (isNumber(path)) {\n      path = [path];\n    }\n    if (isEmpty(path)) {\n      return obj;\n    }\n    if (isEmpty(obj)) {\n      return defaultValue;\n    }\n    if (isString(path)) {\n      return objectPath.get(obj, path.split('.'), defaultValue);\n    }\n\n    var currentPath = getKey(path[0]);\n\n    if (path.length === 1) {\n      if (obj[currentPath] === void 0) {\n        return defaultValue;\n      }\n      return obj[currentPath];\n    }\n\n    return objectPath.get(obj[currentPath], path.slice(1), defaultValue);\n  };\n\n  objectPath.del = function(obj, path) {\n    return del(obj, path);\n  };\n\n  return objectPath;\n});"]},"metadata":{},"sourceType":"script"}