{"ast":null,"code":"var _jsxFileName = \"/Users/yrm/Sites/nudge/src/components/TimeInput.js\";\n// import React, { useCallback, useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { useInput, FieldTitle } from 'ra-core';\n// import { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n// const Picker = ({ PickerComponent, ...fieldProps }) => {\n//   const {\n//     options,\n//     label,\n//     source,\n//     resource,\n//     className,\n//     isRequired,\n//     providerOptions,\n//   } = fieldProps;\n//   const { input, meta } = useInput({ source });\n//   const { touched, error } = meta;\n//   const handleChange = useCallback(value => {\n//     Date.parse(value) ? input.onChange(value.toISOString()) : input.onChange(null);\n//   }, []);\n//   return (\n//     <div className=\"picker\">\n//       <MuiPickersUtilsProvider {...providerOptions}>\n//         <PickerComponent\n//           {...options}\n//           label={<FieldTitle\n//             label={label}\n//             source={source}\n//             resource={resource}\n//             isRequired={isRequired}\n//           />}\n//           margin=\"normal\"\n//           error={!!(touched && error)}\n//           helperText={touched && error}\n//           className={className}\n//           value={input.value ? new Date(input.value) : null}\n//           onChange={date => handleChange(date)}\n//           onBlur={() => input.onBlur(input.value ? new Date(input.value).toISOString() : null)}\n//         />\n//       </MuiPickersUtilsProvider>\n//     </div>\n//   )\n// }\n// Picker.propTypes = {\n//   input: PropTypes.object,\n//   isRequired: PropTypes.bool,\n//   label: PropTypes.string,\n//   meta: PropTypes.object,\n//   options: PropTypes.object,\n//   resource: PropTypes.string,\n//   source: PropTypes.string,\n//   labelTime: PropTypes.string,\n//   className: PropTypes.string,\n//   providerOptions: PropTypes.shape({\n//     utils: PropTypes.func,\n//     locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   }),\n// };\n// Picker.defaultProps = {\n//   input: {},\n//   isRequired: false,\n//   meta: { touched: false, error: false },\n//   options: { },\n//   resource: '',\n//   source: '',\n//   labelTime: '',\n//   className: '',\n//   providerOptions: {\n//     utils: DateFnsUtils,\n//     locale: undefined,\n//   },\n// };\n// const TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />\n// export default TimeInput;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useField } from 'react-final-form';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    backgroundColor: \"#aaaaaa\",\n    width: 250\n  }\n}));\n\nconst TimeInput = ({\n  label,\n  source,\n  record\n}) => {\n  const classes = useStyles();\n  const {\n    input: {\n      onChange\n    }\n  } = useField(label, source, record);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    label: label,\n    type: \"time\",\n    onChange: onChange,\n    defaultValue: record[source],\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 1800 // 30 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TimeInput;","map":{"version":3,"sources":["/Users/yrm/Sites/nudge/src/components/TimeInput.js"],"names":["React","makeStyles","TextField","useField","useStyles","theme","container","display","flexWrap","textField","backgroundColor","width","TimeInput","label","source","record","classes","input","onChange","shrink","step"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAD4B;AAKvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,KAAK,EAAE;AAFE;AAL4B,CAAZ,CAAD,CAA5B;;AAWA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA;AAAjB,CAAD,KAA+B;AAC/C,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM;AACJa,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADH,MAEFf,QAAQ,CAACU,KAAD,EAAQC,MAAR,EAAgBC,MAAhB,CAFZ;AAIA,sBACE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACV,SAAzB;AAAoC,IAAA,UAAU,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,KAAK,EAAEO,KAFT;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,QAAQ,EAAEK,QAJZ;AAKE,IAAA,YAAY,EAAEH,MAAM,CAACD,MAAD,CALtB;AAME,IAAA,SAAS,EAAEE,OAAO,CAACP,SANrB;AAOE,IAAA,eAAe,EAAE;AACfU,MAAAA,MAAM,EAAE;AADO,KAPnB;AAUE,IAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,IADI,CACE;;AADF,KAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAkBD,CAxBD;;AA0BA,eAAeR,SAAf","sourcesContent":["// import React, { useCallback, useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { useInput, FieldTitle } from 'ra-core';\n// import { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n\n// const Picker = ({ PickerComponent, ...fieldProps }) => {\n\n//   const {\n//     options,\n//     label,\n//     source,\n//     resource,\n//     className,\n//     isRequired,\n//     providerOptions,\n//   } = fieldProps;\n\n//   const { input, meta } = useInput({ source });\n  \n//   const { touched, error } = meta;\n  \n//   const handleChange = useCallback(value => {\n//     Date.parse(value) ? input.onChange(value.toISOString()) : input.onChange(null);\n//   }, []);\n\n//   return (\n//     <div className=\"picker\">\n//       <MuiPickersUtilsProvider {...providerOptions}>\n//         <PickerComponent\n//           {...options}\n//           label={<FieldTitle\n//             label={label}\n//             source={source}\n//             resource={resource}\n//             isRequired={isRequired}\n//           />}\n//           margin=\"normal\"\n//           error={!!(touched && error)}\n//           helperText={touched && error}\n//           className={className}\n//           value={input.value ? new Date(input.value) : null}\n//           onChange={date => handleChange(date)}\n//           onBlur={() => input.onBlur(input.value ? new Date(input.value).toISOString() : null)}\n//         />\n//       </MuiPickersUtilsProvider>\n//     </div>\n//   )\n// }\n\n// Picker.propTypes = {\n//   input: PropTypes.object,\n//   isRequired: PropTypes.bool,\n//   label: PropTypes.string,\n//   meta: PropTypes.object,\n//   options: PropTypes.object,\n//   resource: PropTypes.string,\n//   source: PropTypes.string,\n//   labelTime: PropTypes.string,\n//   className: PropTypes.string,\n//   providerOptions: PropTypes.shape({\n//     utils: PropTypes.func,\n//     locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   }),\n// };\n\n// Picker.defaultProps = {\n//   input: {},\n//   isRequired: false,\n//   meta: { touched: false, error: false },\n//   options: { },\n//   resource: '',\n//   source: '',\n//   labelTime: '',\n//   className: '',\n//   providerOptions: {\n//     utils: DateFnsUtils,\n//     locale: undefined,\n//   },\n// };\n\n// const TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />\n\n// export default TimeInput;\n\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { useField } from 'react-final-form';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    backgroundColor: \"#aaaaaa\",\n    width: 250,\n  },\n}));\n\nconst TimeInput = ({ label, source, record }) => {\n  const classes = useStyles();\n  const {\n    input: { onChange }\n  } = useField(label, source, record);\n\n  return (\n    <form className={classes.container} noValidate>\n      <TextField\n        id=\"time\"\n        label={label}\n        type=\"time\"\n        onChange={onChange}\n        defaultValue={record[source]}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        inputProps={{\n          step: 1800, // 30 min\n        }}\n      />\n    </form>\n  );\n}\n\nexport default TimeInput;"]},"metadata":{},"sourceType":"module"}