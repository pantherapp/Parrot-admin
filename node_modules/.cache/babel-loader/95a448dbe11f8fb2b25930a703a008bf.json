{"ast":null,"code":"var _jsxFileName = \"/Users/yrm/Sites/nudge/src/components/TimeInput.js\";\n// import React, { useCallback, useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { useInput, FieldTitle } from 'ra-core';\n// import { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n// const Picker = ({ PickerComponent, ...fieldProps }) => {\n//   const {\n//     options,\n//     label,\n//     source,\n//     resource,\n//     className,\n//     isRequired,\n//     providerOptions,\n//   } = fieldProps;\n//   const { input, meta } = useInput({ source });\n//   const { touched, error } = meta;\n//   const handleChange = useCallback(value => {\n//     Date.parse(value) ? input.onChange(value.toISOString()) : input.onChange(null);\n//   }, []);\n//   return (\n//     <div className=\"picker\">\n//       <MuiPickersUtilsProvider {...providerOptions}>\n//         <PickerComponent\n//           {...options}\n//           label={<FieldTitle\n//             label={label}\n//             source={source}\n//             resource={resource}\n//             isRequired={isRequired}\n//           />}\n//           margin=\"normal\"\n//           error={!!(touched && error)}\n//           helperText={touched && error}\n//           className={className}\n//           value={input.value ? new Date(input.value) : null}\n//           onChange={date => handleChange(date)}\n//           onBlur={() => input.onBlur(input.value ? new Date(input.value).toISOString() : null)}\n//         />\n//       </MuiPickersUtilsProvider>\n//     </div>\n//   )\n// }\n// Picker.propTypes = {\n//   input: PropTypes.object,\n//   isRequired: PropTypes.bool,\n//   label: PropTypes.string,\n//   meta: PropTypes.object,\n//   options: PropTypes.object,\n//   resource: PropTypes.string,\n//   source: PropTypes.string,\n//   labelTime: PropTypes.string,\n//   className: PropTypes.string,\n//   providerOptions: PropTypes.shape({\n//     utils: PropTypes.func,\n//     locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   }),\n// };\n// Picker.defaultProps = {\n//   input: {},\n//   isRequired: false,\n//   meta: { touched: false, error: false },\n//   options: { },\n//   resource: '',\n//   source: '',\n//   labelTime: '',\n//   className: '',\n//   providerOptions: {\n//     utils: DateFnsUtils,\n//     locale: undefined,\n//   },\n// };\n// const TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />\n// export default TimeInput;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\nconst classes = useStyles();\n\nconst TimeInput = props => /*#__PURE__*/React.createElement(\"form\", {\n  className: classes.container,\n  noValidate: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 28\n  }\n}, /*#__PURE__*/React.createElement(TextField, Object.assign({\n  id: \"time\",\n  label: \"Alarm clock\",\n  type: \"time\",\n  defaultValue: \"07:30\",\n  className: classes.textField,\n  InputLabelProps: {\n    shrink: true\n  },\n  inputProps: {\n    step: 300 // 5 min\n\n  }\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 1\n  }\n})));\n\nexport default TimeInput;","map":{"version":3,"sources":["/Users/yrm/Sites/nudge/src/components/TimeInput.js"],"names":["React","makeStyles","TextField","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","classes","TimeInput","props","shrink","step"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAD4B;AAKvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADH;AAETC,IAAAA,WAAW,EAAEP,KAAK,CAACM,OAAN,CAAc,CAAd,CAFJ;AAGTE,IAAAA,KAAK,EAAE;AAHE;AAL4B,CAAZ,CAAD,CAA5B;AAYA,MAAMC,OAAO,GAAGV,SAAS,EAAzB;;AAEA,MAAMW,SAAS,GAAGC,KAAK,iBAAI;AAAM,EAAA,SAAS,EAAEF,OAAO,CAACR,SAAzB;AAAoC,EAAA,UAAU,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAC3B,oBAAC,SAAD;AACE,EAAA,EAAE,EAAC,MADL;AAEE,EAAA,KAAK,EAAC,aAFR;AAGE,EAAA,IAAI,EAAC,MAHP;AAIE,EAAA,YAAY,EAAC,OAJf;AAKE,EAAA,SAAS,EAAEQ,OAAO,CAACL,SALrB;AAME,EAAA,eAAe,EAAE;AACfQ,IAAAA,MAAM,EAAE;AADO,GANnB;AASE,EAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,GADI,CACC;;AADD;AATd,GAYMF,KAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAD2B,CAA3B;;AAgBA,eAAeD,SAAf","sourcesContent":["// import React, { useCallback, useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { useInput, FieldTitle } from 'ra-core';\n// import { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n\n// const Picker = ({ PickerComponent, ...fieldProps }) => {\n\n//   const {\n//     options,\n//     label,\n//     source,\n//     resource,\n//     className,\n//     isRequired,\n//     providerOptions,\n//   } = fieldProps;\n\n//   const { input, meta } = useInput({ source });\n  \n//   const { touched, error } = meta;\n  \n//   const handleChange = useCallback(value => {\n//     Date.parse(value) ? input.onChange(value.toISOString()) : input.onChange(null);\n//   }, []);\n\n//   return (\n//     <div className=\"picker\">\n//       <MuiPickersUtilsProvider {...providerOptions}>\n//         <PickerComponent\n//           {...options}\n//           label={<FieldTitle\n//             label={label}\n//             source={source}\n//             resource={resource}\n//             isRequired={isRequired}\n//           />}\n//           margin=\"normal\"\n//           error={!!(touched && error)}\n//           helperText={touched && error}\n//           className={className}\n//           value={input.value ? new Date(input.value) : null}\n//           onChange={date => handleChange(date)}\n//           onBlur={() => input.onBlur(input.value ? new Date(input.value).toISOString() : null)}\n//         />\n//       </MuiPickersUtilsProvider>\n//     </div>\n//   )\n// }\n\n// Picker.propTypes = {\n//   input: PropTypes.object,\n//   isRequired: PropTypes.bool,\n//   label: PropTypes.string,\n//   meta: PropTypes.object,\n//   options: PropTypes.object,\n//   resource: PropTypes.string,\n//   source: PropTypes.string,\n//   labelTime: PropTypes.string,\n//   className: PropTypes.string,\n//   providerOptions: PropTypes.shape({\n//     utils: PropTypes.func,\n//     locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   }),\n// };\n\n// Picker.defaultProps = {\n//   input: {},\n//   isRequired: false,\n//   meta: { touched: false, error: false },\n//   options: { },\n//   resource: '',\n//   source: '',\n//   labelTime: '',\n//   className: '',\n//   providerOptions: {\n//     utils: DateFnsUtils,\n//     locale: undefined,\n//   },\n// };\n\n// const TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />\n\n// export default TimeInput;\n\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst classes = useStyles();\n\nconst TimeInput = props => <form className={classes.container} noValidate>\n<TextField\n  id=\"time\"\n  label=\"Alarm clock\"\n  type=\"time\"\n  defaultValue=\"07:30\"\n  className={classes.textField}\n  InputLabelProps={{\n    shrink: true,\n  }}\n  inputProps={{\n    step: 300, // 5 min\n  }}\n  {...props} />\n</form>\n\nexport default TimeInput;"]},"metadata":{},"sourceType":"module"}