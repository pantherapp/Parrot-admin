{"ast":null,"code":"var _jsxFileName = \"/Users/yrm/Sites/parrot/src/models/Voice.js\";\nimport React from 'react';\nimport { List, Datagrid, TextField, EditButton } from 'react-admin';\nimport { useQuery, Loading, Error } from 'react-admin';\n\nconst Comment = ({\n  voiceId\n}) => {\n  const {\n    data,\n    total,\n    loading,\n    error\n  } = useQuery({\n    type: 'getList',\n    resource: 'comments',\n    payload: {\n      voice_doc_id: voiceId\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  });\n  if (!data) return null;\n  if (!total) return 0;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, total, \" comments\");\n};\n\nconst ConditionBooleanField = ({\n  record,\n  ...rest\n}) => {\n  return record.report_users ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Reported by user\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"No Report\");\n};\n\nexport const VoiceList = props => /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Datagrid, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  label: \"Location\",\n  source: \"address\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ConditionBooleanField, {\n  source: \"report_users\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TextField, {\n  source: \"comments\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(EditButton, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }\n})));","map":{"version":3,"sources":["/Users/yrm/Sites/parrot/src/models/Voice.js"],"names":["React","List","Datagrid","TextField","EditButton","useQuery","Loading","Error","Comment","voiceId","data","total","loading","error","type","resource","payload","voice_doc_id","ConditionBooleanField","record","rest","report_users","VoiceList","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,SAHF,EAIEC,UAJF,QAKO,aALP;AAMA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,KAA5B,QAAyC,aAAzC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAC/B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA;AAAxB,MAAkCR,QAAQ,CAAC;AAC7CS,IAAAA,IAAI,EAAE,SADuC;AAE7CC,IAAAA,QAAQ,EAAE,UAFmC;AAG7CC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,YAAY,EAAER;AAAhB;AAHoC,GAAD,CAAhD;AAMA,MAAIG,OAAJ,EAAa,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACX,MAAI,CAACH,IAAL,EAAW,OAAO,IAAP;AACX,MAAI,CAACC,KAAL,EAAY,OAAO,CAAP;AAEZ,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,KAAP,cADF;AAGD,CAfD;;AAiBA,MAAMO,qBAAqB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAU,KAAGC;AAAb,CAAD,KAAyB;AACnD,SAAOD,MAAM,CAACE,YAAP,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADC,gBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFN;AAGH,CAJD;;AAMA,OAAO,MAAMC,SAAS,GAAGC,KAAK,iBAC5B,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAW,EAAA,KAAK,EAAC,UAAjB;AAA4B,EAAA,MAAM,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAEE,oBAAC,qBAAD;AAAuB,EAAA,MAAM,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,eAGE,oBAAC,SAAD;AAAW,EAAA,MAAM,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,CADF,CADK","sourcesContent":["import React from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  EditButton\n} from 'react-admin';\nimport { useQuery, Loading, Error } from 'react-admin';\n\nconst Comment = ({ voiceId }) => {\n  const { data, total, loading, error } = useQuery({ \n      type: 'getList',\n      resource: 'comments',\n      payload: { voice_doc_id: voiceId }\n  });\n\n  if (loading) return <Loading />;\n  if (error) return <Error />;\n  if (!data) return null;\n  if (!total) return 0;\n\n  return (\n    <span>{total} comments</span>\n  )\n};\n\nconst ConditionBooleanField = ({ record, ...rest }) => {\n    return record.report_users\n        ? <span>Reported by user</span>\n        : <span>No Report</span>;\n}\n\nexport const VoiceList = props => (\n  <List {...props}>\n    <Datagrid>\n      <TextField label=\"Location\" source=\"address\" />\n      <ConditionBooleanField source=\"report_users\" />\n      <TextField source=\"comments\" />\n      <EditButton />\n    </Datagrid>\n  </List>\n);"]},"metadata":{},"sourceType":"module"}