{"ast":null,"code":"import { useCallback } from 'react'; // @ts-ignore\n\nimport inflection from 'inflection';\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport { useCreate } from '../dataProvider';\nimport { useNotify, useRedirect } from '../sideEffect';\nimport { useTranslate } from '../i18n';\nimport { useVersion } from '.';\nimport { CRUD_CREATE } from '../actions';\n/**\n * Prepare data for the Create view\n *\n * @param {Object} props The props passed to the Create component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Create view\n *\n * @example\n *\n * import { useCreateController } from 'react-admin';\n * import CreateView from './CreateView';\n *\n * const MyCreate = props => {\n *     const controllerProps = useCreateController(props);\n *     return <CreateView {...controllerProps} {...props} />;\n * }\n */\n\nvar useCreateController = function useCreateController(props) {\n  useCheckMinimumRequiredProps('Create', ['basePath', 'resource'], props);\n  var basePath = props.basePath,\n      resource = props.resource,\n      _a = props.record,\n      record = _a === void 0 ? {} : _a,\n      hasShow = props.hasShow,\n      hasEdit = props.hasEdit,\n      successMessage = props.successMessage;\n  var location = useLocation();\n  var translate = useTranslate();\n  var notify = useNotify();\n  var redirect = useRedirect();\n  var recordToUse = getRecord(location, record);\n  var version = useVersion();\n\n  var _b = useCreate(resource),\n      create = _b[0],\n      saving = _b[1].loading;\n\n  var save = useCallback(function (data, redirectTo, _a) {\n    if (redirectTo === void 0) {\n      redirectTo = 'list';\n    }\n\n    var _b = _a === void 0 ? {} : _a,\n        onSuccess = _b.onSuccess,\n        onFailure = _b.onFailure;\n\n    return create({\n      payload: {\n        data: data\n      }\n    }, {\n      action: CRUD_CREATE,\n      onSuccess: onSuccess ? onSuccess : function (_a) {\n        var newRecord = _a.data;\n        notify(successMessage || 'ra.notification.created', 'info', {\n          smart_count: 1\n        });\n        redirect(redirectTo, basePath, newRecord.id, newRecord);\n      },\n      onFailure: onFailure ? onFailure : function (error) {\n        notify(typeof error === 'string' ? error : error.message || 'ra.notification.http_error', 'warning');\n      }\n    });\n  }, [create, notify, successMessage, redirect, basePath]);\n  var resourceName = translate(\"resources.\" + resource + \".name\", {\n    smart_count: 1,\n    _: inflection.humanize(inflection.singularize(resource))\n  });\n  var defaultTitle = translate('ra.page.create', {\n    name: \"\" + resourceName\n  });\n  return {\n    loading: false,\n    loaded: true,\n    saving: saving,\n    defaultTitle: defaultTitle,\n    save: save,\n    resource: resource,\n    basePath: basePath,\n    record: recordToUse,\n    redirect: getDefaultRedirectRoute(hasShow, hasEdit),\n    version: version\n  };\n};\n\nexport default useCreateController;\nexport var getRecord = function getRecord(_a, record) {\n  var state = _a.state,\n      search = _a.search;\n\n  if (record === void 0) {\n    record = {};\n  }\n\n  if (state && state.record) {\n    return state.record;\n  }\n\n  if (search) {\n    try {\n      var searchParams = parse(search);\n\n      if (searchParams.source) {\n        if (Array.isArray(searchParams.source)) {\n          console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n          return;\n        }\n\n        return JSON.parse(searchParams.source);\n      }\n    } catch (e) {\n      console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n    }\n  }\n\n  return record;\n};\n\nvar getDefaultRedirectRoute = function getDefaultRedirectRoute(hasShow, hasEdit) {\n  if (hasEdit) {\n    return 'edit';\n  }\n\n  if (hasShow) {\n    return 'show';\n  }\n\n  return 'list';\n};","map":{"version":3,"sources":["/Users/yrm/Sites/nudge/node_modules/ra-core/esm/controller/useCreateController.js"],"names":["useCallback","inflection","parse","useLocation","useCheckMinimumRequiredProps","useCreate","useNotify","useRedirect","useTranslate","useVersion","CRUD_CREATE","useCreateController","props","basePath","resource","_a","record","hasShow","hasEdit","successMessage","location","translate","notify","redirect","recordToUse","getRecord","version","_b","create","saving","loading","save","data","redirectTo","onSuccess","onFailure","payload","action","newRecord","smart_count","id","error","message","resourceName","_","humanize","singularize","defaultTitle","name","loaded","getDefaultRedirectRoute","state","search","searchParams","source","Array","isArray","console","JSON","e"],"mappings":"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","sourcesContent":["import { useCallback } from 'react';\n// @ts-ignore\nimport inflection from 'inflection';\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { useCheckMinimumRequiredProps } from './checkMinimumRequiredProps';\nimport { useCreate } from '../dataProvider';\nimport { useNotify, useRedirect } from '../sideEffect';\nimport { useTranslate } from '../i18n';\nimport { useVersion } from '.';\nimport { CRUD_CREATE } from '../actions';\n/**\n * Prepare data for the Create view\n *\n * @param {Object} props The props passed to the Create component.\n *\n * @return {Object} controllerProps Fetched data and callbacks for the Create view\n *\n * @example\n *\n * import { useCreateController } from 'react-admin';\n * import CreateView from './CreateView';\n *\n * const MyCreate = props => {\n *     const controllerProps = useCreateController(props);\n *     return <CreateView {...controllerProps} {...props} />;\n * }\n */\nvar useCreateController = function (props) {\n    useCheckMinimumRequiredProps('Create', ['basePath', 'resource'], props);\n    var basePath = props.basePath, resource = props.resource, _a = props.record, record = _a === void 0 ? {} : _a, hasShow = props.hasShow, hasEdit = props.hasEdit, successMessage = props.successMessage;\n    var location = useLocation();\n    var translate = useTranslate();\n    var notify = useNotify();\n    var redirect = useRedirect();\n    var recordToUse = getRecord(location, record);\n    var version = useVersion();\n    var _b = useCreate(resource), create = _b[0], saving = _b[1].loading;\n    var save = useCallback(function (data, redirectTo, _a) {\n        if (redirectTo === void 0) { redirectTo = 'list'; }\n        var _b = _a === void 0 ? {} : _a, onSuccess = _b.onSuccess, onFailure = _b.onFailure;\n        return create({ payload: { data: data } }, {\n            action: CRUD_CREATE,\n            onSuccess: onSuccess\n                ? onSuccess\n                : function (_a) {\n                    var newRecord = _a.data;\n                    notify(successMessage || 'ra.notification.created', 'info', {\n                        smart_count: 1,\n                    });\n                    redirect(redirectTo, basePath, newRecord.id, newRecord);\n                },\n            onFailure: onFailure\n                ? onFailure\n                : function (error) {\n                    notify(typeof error === 'string'\n                        ? error\n                        : error.message ||\n                            'ra.notification.http_error', 'warning');\n                },\n        });\n    }, [create, notify, successMessage, redirect, basePath]);\n    var resourceName = translate(\"resources.\" + resource + \".name\", {\n        smart_count: 1,\n        _: inflection.humanize(inflection.singularize(resource)),\n    });\n    var defaultTitle = translate('ra.page.create', {\n        name: \"\" + resourceName,\n    });\n    return {\n        loading: false,\n        loaded: true,\n        saving: saving,\n        defaultTitle: defaultTitle,\n        save: save,\n        resource: resource,\n        basePath: basePath,\n        record: recordToUse,\n        redirect: getDefaultRedirectRoute(hasShow, hasEdit),\n        version: version,\n    };\n};\nexport default useCreateController;\nexport var getRecord = function (_a, record) {\n    var state = _a.state, search = _a.search;\n    if (record === void 0) { record = {}; }\n    if (state && state.record) {\n        return state.record;\n    }\n    if (search) {\n        try {\n            var searchParams = parse(search);\n            if (searchParams.source) {\n                if (Array.isArray(searchParams.source)) {\n                    console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n                    return;\n                }\n                return JSON.parse(searchParams.source);\n            }\n        }\n        catch (e) {\n            console.error(\"Failed to parse location search parameter '\" + search + \"'. To pre-fill some fields in the Create form, pass a stringified source parameter (e.g. '?source={\\\"title\\\":\\\"foo\\\"}')\");\n        }\n    }\n    return record;\n};\nvar getDefaultRedirectRoute = function (hasShow, hasEdit) {\n    if (hasEdit) {\n        return 'edit';\n    }\n    if (hasShow) {\n        return 'show';\n    }\n    return 'list';\n};\n"]},"metadata":{},"sourceType":"module"}