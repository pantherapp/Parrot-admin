{"ast":null,"code":"var _jsxFileName = \"/Users/yrm/Sites/nudge/src/components/TimeInput.js\";\n// import React, { useCallback, useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { useInput, FieldTitle } from 'ra-core';\n// import { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n// const Picker = ({ PickerComponent, ...fieldProps }) => {\n//   const {\n//     options,\n//     label,\n//     source,\n//     resource,\n//     className,\n//     isRequired,\n//     providerOptions,\n//   } = fieldProps;\n//   const { input, meta } = useInput({ source });\n//   const { touched, error } = meta;\n//   const handleChange = useCallback(value => {\n//     Date.parse(value) ? input.onChange(value.toISOString()) : input.onChange(null);\n//   }, []);\n//   return (\n//     <div className=\"picker\">\n//       <MuiPickersUtilsProvider {...providerOptions}>\n//         <PickerComponent\n//           {...options}\n//           label={<FieldTitle\n//             label={label}\n//             source={source}\n//             resource={resource}\n//             isRequired={isRequired}\n//           />}\n//           margin=\"normal\"\n//           error={!!(touched && error)}\n//           helperText={touched && error}\n//           className={className}\n//           value={input.value ? new Date(input.value) : null}\n//           onChange={date => handleChange(date)}\n//           onBlur={() => input.onBlur(input.value ? new Date(input.value).toISOString() : null)}\n//         />\n//       </MuiPickersUtilsProvider>\n//     </div>\n//   )\n// }\n// Picker.propTypes = {\n//   input: PropTypes.object,\n//   isRequired: PropTypes.bool,\n//   label: PropTypes.string,\n//   meta: PropTypes.object,\n//   options: PropTypes.object,\n//   resource: PropTypes.string,\n//   source: PropTypes.string,\n//   labelTime: PropTypes.string,\n//   className: PropTypes.string,\n//   providerOptions: PropTypes.shape({\n//     utils: PropTypes.func,\n//     locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   }),\n// };\n// Picker.defaultProps = {\n//   input: {},\n//   isRequired: false,\n//   meta: { touched: false, error: false },\n//   options: { },\n//   resource: '',\n//   source: '',\n//   labelTime: '',\n//   className: '',\n//   providerOptions: {\n//     utils: DateFnsUtils,\n//     locale: undefined,\n//   },\n// };\n// const TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />\n// export default TimeInput;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    width: 250\n  }\n}));\n\nconst TimeInput = props => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", Object.assign({\n    className: classes.container\n  }, props, {\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    id: \"time\",\n    label: \"Alarm clock\",\n    type: \"time\",\n    defaultValue: \"07:30\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 1800 // 30 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TimeInput;","map":{"version":3,"sources":["/Users/yrm/Sites/nudge/src/components/TimeInput.js"],"names":["React","makeStyles","TextField","useStyles","theme","container","display","flexWrap","textField","width","TimeInput","props","classes","shrink","step"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE,MADA;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAD4B;AAKvCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE;AADE;AAL4B,CAAZ,CAAD,CAA5B;;AAUA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAMC,OAAO,GAAGT,SAAS,EAAzB;AAEA,sBACE;AAAM,IAAA,SAAS,EAAES,OAAO,CAACP;AAAzB,KAAwCM,KAAxC;AAA+C,IAAA,UAAU,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,KAAK,EAAC,aAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,YAAY,EAAC,OAJf;AAKE,IAAA,SAAS,EAAEC,OAAO,CAACJ,SALrB;AAME,IAAA,eAAe,EAAE;AACfK,MAAAA,MAAM,EAAE;AADO,KANnB;AASE,IAAA,UAAU,EAAE;AACVC,MAAAA,IAAI,EAAE,IADI,CACE;;AADF,KATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAiBD,CApBD;;AAsBA,eAAeJ,SAAf","sourcesContent":["// import React, { useCallback, useRef } from 'react';\n// import PropTypes from 'prop-types';\n// import { useInput, FieldTitle } from 'ra-core';\n// import { TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\n// import DateFnsUtils from '@date-io/date-fns';\n\n// const Picker = ({ PickerComponent, ...fieldProps }) => {\n\n//   const {\n//     options,\n//     label,\n//     source,\n//     resource,\n//     className,\n//     isRequired,\n//     providerOptions,\n//   } = fieldProps;\n\n//   const { input, meta } = useInput({ source });\n  \n//   const { touched, error } = meta;\n  \n//   const handleChange = useCallback(value => {\n//     Date.parse(value) ? input.onChange(value.toISOString()) : input.onChange(null);\n//   }, []);\n\n//   return (\n//     <div className=\"picker\">\n//       <MuiPickersUtilsProvider {...providerOptions}>\n//         <PickerComponent\n//           {...options}\n//           label={<FieldTitle\n//             label={label}\n//             source={source}\n//             resource={resource}\n//             isRequired={isRequired}\n//           />}\n//           margin=\"normal\"\n//           error={!!(touched && error)}\n//           helperText={touched && error}\n//           className={className}\n//           value={input.value ? new Date(input.value) : null}\n//           onChange={date => handleChange(date)}\n//           onBlur={() => input.onBlur(input.value ? new Date(input.value).toISOString() : null)}\n//         />\n//       </MuiPickersUtilsProvider>\n//     </div>\n//   )\n// }\n\n// Picker.propTypes = {\n//   input: PropTypes.object,\n//   isRequired: PropTypes.bool,\n//   label: PropTypes.string,\n//   meta: PropTypes.object,\n//   options: PropTypes.object,\n//   resource: PropTypes.string,\n//   source: PropTypes.string,\n//   labelTime: PropTypes.string,\n//   className: PropTypes.string,\n//   providerOptions: PropTypes.shape({\n//     utils: PropTypes.func,\n//     locale: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n//   }),\n// };\n\n// Picker.defaultProps = {\n//   input: {},\n//   isRequired: false,\n//   meta: { touched: false, error: false },\n//   options: { },\n//   resource: '',\n//   source: '',\n//   labelTime: '',\n//   className: '',\n//   providerOptions: {\n//     utils: DateFnsUtils,\n//     locale: undefined,\n//   },\n// };\n\n// const TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />\n\n// export default TimeInput;\n\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    width: 250,\n  },\n}));\n\nconst TimeInput = props => {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.container} {...props} noValidate>\n      <TextField\n        id=\"time\"\n        label=\"Alarm clock\"\n        type=\"time\"\n        defaultValue=\"07:30\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        inputProps={{\n          step: 1800, // 30 min\n        }}\n      />\n    </form>\n  );\n}\n\nexport default TimeInput;"]},"metadata":{},"sourceType":"module"}