{"ast":null,"code":"import _objectSpread from\"/Users/yrm/Sites/parrot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/yrm/Sites/parrot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/yrm/Sites/parrot/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* globals localStorage */import{AUTH_LOGIN,AUTH_LOGOUT,AUTH_CHECK,AUTH_GET_PERMISSIONS}from'react-admin';import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var baseConfig={userProfilePath:'/users/',userAdminProp:'isAdmin',localStorageTokenName:'RAFirebaseClientToken',handleAuthStateChange:function(){var _handleAuthStateChange=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(auth,config){var snapshot,profile,firebaseToken,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!auth){_context.next=19;break;}_context.next=3;return firebase.firestore().doc(config.userProfilePath+auth.user.uid).get();case 3:snapshot=_context.sent;profile=snapshot.data();if(!(profile&&profile[config.userAdminProp])){_context.next=14;break;}_context.next=8;return auth.user.getIdToken();case 8:firebaseToken=_context.sent;user={auth:auth,profile:profile,firebaseToken:firebaseToken};localStorage.setItem(config.localStorageTokenName,firebaseToken);return _context.abrupt(\"return\",user);case 14:firebase.auth().signOut();localStorage.removeItem(config.localStorageTokenName);throw new Error('sign_in_error');case 17:_context.next=21;break;case 19:localStorage.removeItem(config.localStorageTokenName);throw new Error('sign_in_error');case 21:case\"end\":return _context.stop();}}},_callee);}));function handleAuthStateChange(_x,_x2){return _handleAuthStateChange.apply(this,arguments);}return handleAuthStateChange;}()};export default(function(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};config=_objectSpread(_objectSpread({},baseConfig),config);var firebaseLoaded=function firebaseLoaded(){return new Promise(function(resolve){firebase.auth().onAuthStateChanged(resolve);});};return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type,params){var token,username,password,alreadySignedIn,auth;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(type===AUTH_LOGOUT)){_context2.next=3;break;}config.handleAuthStateChange(null,config).catch(function(){});return _context2.abrupt(\"return\",firebase.auth().signOut());case 3:if(!firebase.auth().currentUser){_context2.next=6;break;}_context2.next=6;return firebase.auth().currentUser.reload();case 6:if(!(type===AUTH_CHECK)){_context2.next=12;break;}_context2.next=9;return firebaseLoaded();case 9:if(firebase.auth().currentUser){_context2.next=11;break;}throw new Error('sign_in_error');case 11:return _context2.abrupt(\"return\",true);case 12:if(!(type===AUTH_GET_PERMISSIONS)){_context2.next=22;break;}console.log('AUTH_GET_PERMISSIONS');_context2.next=16;return firebaseLoaded();case 16:if(firebase.auth().currentUser){_context2.next=18;break;}throw new Error('sign_in_error');case 18:_context2.next=20;return firebase.auth().currentUser.getIdTokenResult();case 20:token=_context2.sent;return _context2.abrupt(\"return\",token.claims);case 22:if(!(type===AUTH_LOGIN)){_context2.next=30;break;}username=params.username,password=params.password,alreadySignedIn=params.alreadySignedIn;auth=firebase.auth().currentUser;if(!(!auth||!alreadySignedIn)){_context2.next=29;break;}_context2.next=28;return firebase.auth().signInWithEmailAndPassword(username,password);case 28:auth=_context2.sent;case 29:return _context2.abrupt(\"return\",config.handleAuthStateChange(auth,config));case 30:return _context2.abrupt(\"return\",false);case 31:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref.apply(this,arguments);};}();});","map":{"version":3,"sources":["/Users/yrm/Sites/parrot/src/lib/AuthProvider.js"],"names":["AUTH_LOGIN","AUTH_LOGOUT","AUTH_CHECK","AUTH_GET_PERMISSIONS","firebase","baseConfig","userProfilePath","userAdminProp","localStorageTokenName","handleAuthStateChange","auth","config","firestore","doc","user","uid","get","snapshot","profile","data","getIdToken","firebaseToken","localStorage","setItem","signOut","removeItem","Error","firebaseLoaded","Promise","resolve","onAuthStateChanged","type","params","catch","currentUser","reload","console","log","getIdTokenResult","token","claims","username","password","alreadySignedIn","signInWithEmailAndPassword"],"mappings":"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","sourcesContent":["/* globals localStorage */\nimport { AUTH_LOGIN, AUTH_LOGOUT, AUTH_CHECK, AUTH_GET_PERMISSIONS } from 'react-admin';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst baseConfig = {\n  userProfilePath: '/users/',\n  userAdminProp: 'isAdmin',\n  localStorageTokenName: 'RAFirebaseClientToken',\n  handleAuthStateChange: async (auth, config) => {\n    if (auth) {\n      const snapshot = await firebase\n        .firestore()\n        .doc(config.userProfilePath + auth.user.uid)\n        .get();\n      const profile = snapshot.data();\n\n      if (profile && profile[config.userAdminProp]) {\n        const firebaseToken = await auth.user.getIdToken();\n        let user = { auth, profile, firebaseToken };\n        localStorage.setItem(config.localStorageTokenName, firebaseToken);\n        return user;\n      } else {\n        firebase.auth().signOut();\n        localStorage.removeItem(config.localStorageTokenName);\n        throw new Error('sign_in_error');\n      }\n    } else {\n      localStorage.removeItem(config.localStorageTokenName);\n      throw new Error('sign_in_error');\n    }\n  }\n};\n\nexport default (config = {}) => {\n  config = { ...baseConfig, ...config };\n\n  const firebaseLoaded = () =>\n    new Promise(resolve => {\n      firebase.auth().onAuthStateChanged(resolve);\n    });\n\n  return async (type, params) => {\n    if (type === AUTH_LOGOUT) {\n      config.handleAuthStateChange(null, config).catch(() => {});\n      return firebase.auth().signOut();\n    }\n\n    if (firebase.auth().currentUser) {\n      await firebase.auth().currentUser.reload();\n    }\n\n    if (type === AUTH_CHECK) {\n      await firebaseLoaded();\n\n      if (!firebase.auth().currentUser) {\n        throw new Error('sign_in_error');\n      }\n\n      return true;\n    }\n\n    if (type === AUTH_GET_PERMISSIONS) {\n      console.log('AUTH_GET_PERMISSIONS');\n      await firebaseLoaded();\n\n      if (!firebase.auth().currentUser) {\n        throw new Error('sign_in_error');\n      }\n\n      const token = await firebase.auth().currentUser.getIdTokenResult();\n      return token.claims;\n    }\n\n    if (type === AUTH_LOGIN) {\n      const { username, password, alreadySignedIn } = params;\n      let auth = firebase.auth().currentUser;\n\n      if (!auth || !alreadySignedIn) {\n        auth = await firebase.auth().signInWithEmailAndPassword(username, password);\n      }\n\n      return config.handleAuthStateChange(auth, config);\n    }\n\n    return false;\n  };\n};"]},"metadata":{},"sourceType":"module"}