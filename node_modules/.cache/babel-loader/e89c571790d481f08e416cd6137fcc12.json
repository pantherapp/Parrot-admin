{"ast":null,"code":"var _jsxFileName = \"/Users/yrm/Sites/parrot/src/models/Voice.js\";\nimport React, { useState, useEffect } from 'react';\nimport { List, Datagrid, TextField, Show, SimpleShowLayout } from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\nimport { default as MyList } from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst Comment = ({\n  record\n}) => {\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    dataProvider.getList('comments', {\n      pagination: {\n        page: 1,\n        perPage: 100000\n      },\n      sort: {},\n      filter: {\n        voice_doc_id: record.id\n      }\n    }).then(({\n      data,\n      total\n    }) => {\n      setTotal(total);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  });\n  if (!total) return 0;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, total, \" comments\");\n};\n\nconst ConditionBooleanField = ({\n  record,\n  ...rest\n}) => {\n  return record.report_users ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), \"Reported by user\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), \"No Report\");\n};\n\nconst titleStyle = {\n  marginRight: 50,\n  fontSize: '15px'\n};\n\nconst Player = ({\n  record\n}) => /*#__PURE__*/React.createElement(\"audio\", {\n  controls: true,\n  src: record.voice_url,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n});\n\nconst CommentGrid = ({\n  record\n}) => {\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    dataProvider.getList('comments', {\n      pagination: {\n        page: 1,\n        perPage: 100000\n      },\n      sort: {},\n      filter: {\n        voice_doc_id: record.id\n      }\n    }).then(({\n      data,\n      total\n    }) => {\n      setTotal(total);\n      setData(data);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  });\n  if (error) return /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  });\n  if (!total) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 22\n    }\n  }, \"No comments\");\n  if (!data) return [];\n  return /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Voice\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, data.map(value => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: value.created_timestamp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, value.address), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"audio\", {\n      controls: true,\n      src: value.voice_url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 26\n      }\n    })));\n  }))); // return (\n  //   <MyList>\n  //     {data.map(value => {\n  //       return (\n  //         <ListItem key={value.created_timestamp}>\n  //           <span style={titleStyle}>{value.address}</span> <audio controls src={value.voice_url} />\n  //         </ListItem>\n  //       )\n  //     })}\n  //   </MyList>\n  // )\n};\n\nCommentGrid.defaultProps = {\n  addLabel: true\n};\nexport const VoiceList = props => /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(Datagrid, {\n  rowClick: \"show\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  label: \"Location\",\n  source: \"address\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Comment, {\n  label: \"Comments\",\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Player, {\n  label: \"Voice\",\n  source: \"voice_url\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ConditionBooleanField, {\n  source: \"report_users\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 7\n  }\n})));\nexport const VoiceShow = props => /*#__PURE__*/React.createElement(Show, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SimpleShowLayout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextField, {\n  source: \"address\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(Player, {\n  label: \"Voice\",\n  source: \"voice_url\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(CommentGrid, {\n  label: \"Comments\",\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }\n}), /*#__PURE__*/React.createElement(ConditionBooleanField, {\n  source: \"report_users\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }\n})));","map":{"version":3,"sources":["/Users/yrm/Sites/parrot/src/models/Voice.js"],"names":["React","useState","useEffect","List","Datagrid","TextField","Show","SimpleShowLayout","useDataProvider","Loading","Error","default","MyList","ListItem","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Card","CardContent","CardHeader","Comment","record","dataProvider","total","setTotal","loading","setLoading","error","setError","getList","pagination","page","perPage","sort","filter","voice_doc_id","id","then","data","catch","ConditionBooleanField","rest","report_users","titleStyle","marginRight","fontSize","Player","voice_url","CommentGrid","setData","map","value","created_timestamp","address","defaultProps","addLabel","VoiceList","props","VoiceShow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  List,\n  Datagrid,\n  TextField,\n  Show,\n  SimpleShowLayout\n} from 'react-admin';\nimport { useDataProvider, Loading, Error } from 'react-admin';\nimport { default as MyList } from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nconst Comment = ({ record }) => {\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n      dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n          .then(({ data, total }) => {\n              setTotal(total);                \n              setLoading(false);\n          })\n          .catch(error => {\n              setError(error);\n              setLoading(false);\n          })\n  }, []);\n  \n  if (loading) return <Loading />;\n  if (error) return <Error />;\n  if (!total) return 0;\n\n  return (\n    <span>{total} comments</span>\n  )\n};\n\nconst ConditionBooleanField = ({ record, ...rest }) => {\n    return record.report_users\n        ? <span><br />Reported by user</span>\n        : <span><br />No Report</span>;\n}\n\nconst titleStyle = {\n  marginRight: 50,\n  fontSize: '15px'\n};\n\n\nconst Player = ({ record }) => (\n  <audio controls src={record.voice_url} />\n);\n\nconst CommentGrid = ({ record }) => {\n\n  const dataProvider = useDataProvider();\n  const [total, setTotal] = useState();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n      dataProvider.getList('comments', { pagination: { page: 1 , perPage: 100000 }, sort: {}, filter: {voice_doc_id: record.id} })\n          .then(({ data, total }) => {\n              setTotal(total);  \n              setData(data);\n              setLoading(false);\n          })\n          .catch(error => {\n              setError(error);\n              setLoading(false);\n          })\n  }, []);\n\n  if (loading) return <Loading />;\n  if (error) return <Error />;\n  if (!total) return <span>No comments</span>;\n  if (!data) return [];\n\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell>Address</TableCell>\n          <TableCell>Voice</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {data.map(value => {\n          return (\n            <TableRow key={value.created_timestamp}>\n              <TableCell>{value.address}</TableCell>\n              <TableCell><audio controls src={value.voice_url} /></TableCell>\n            </TableRow>\n          )\n        })}\n      </TableBody>\n    </Table>\n  );\n\n  // return (\n  //   <MyList>\n  //     {data.map(value => {\n  //       return (\n  //         <ListItem key={value.created_timestamp}>\n  //           <span style={titleStyle}>{value.address}</span> <audio controls src={value.voice_url} />\n  //         </ListItem>\n  //       )\n  //     })}\n  //   </MyList>\n  // )\n};\n\nCommentGrid.defaultProps = {\n  addLabel: true,\n};\n\nexport const VoiceList = props => (\n  <List {...props} >\n    <Datagrid rowClick=\"show\">\n      <TextField label=\"Location\" source=\"address\" />\n      <Comment label=\"Comments\" source=\"id\" />\n      <Player label=\"Voice\" source=\"voice_url\" />\n      <ConditionBooleanField source=\"report_users\" />\n    </Datagrid>\n  </List>\n);\n\nexport const VoiceShow = props => (\n  <Show {...props}>\n    <SimpleShowLayout>\n        <TextField source=\"address\" />\n        <Player label=\"Voice\" source=\"voice_url\" />\n        <CommentGrid label=\"Comments\" source=\"id\" />\n        <ConditionBooleanField source=\"report_users\" />\n    </SimpleShowLayout>\n  </Show>\n);\n"]},"metadata":{},"sourceType":"module"}